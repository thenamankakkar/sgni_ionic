{"version":3,"sources":["webpack:///src/app/pages/location/location.page.html","webpack:///src/app/pages/location/location-routing.module.ts","webpack:///src/app/pages/location/location.module.ts","webpack:///src/app/pages/location/location.page.scss","webpack:///src/app/pages/location/location.page.ts"],"names":["routes","path","component","LocationPageRoutingModule","imports","forChild","exports","LocationPageModule","declarations","LocationPage","http","service","toastController","router","loadingController","url","result","result2","create","message","loading","present","location","subscribe","data","dismiss","console","log","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,yBAAyB;AAAA;AAAA,O;;AAAzBA,+BAAyB,6DAJrC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIqC,GAAzBH,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCKAI,kBAAkB;AAAA;AAAA,O;;AAAlBA,wBAAkB,6DAV9B,+DAAS;AACNH,eAAO,EAAE,CACL,4DADK,EAEL,0DAFK,EAGL,0DAHK,EAIL,kFAJK,EAKL,qEALK,CADH;AAQRI,oBAAY,EAAE,CAAC,2DAAD;AARN,OAAT,CAU8B,GAAlBD,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACrBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYFE,YAAY;AAoBpB,8BAAoBC,IAApB,EACyBC,OADzB,EAEwBC,eAFxB,EAGyBC,MAHzB,EAIyBC,iBAJzB,EAI6D;AAAA;;AAJzC,eAAAJ,IAAA,GAAAA,IAAA;AACK,eAAAC,OAAA,GAAAA,OAAA;AACD,eAAAC,eAAA,GAAAA,eAAA;AACC,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AApB1B,eAAAC,GAAA,GAAM,mDAAN;AAEA,eAAAC,MAAA,GAAc,EAAd;AAEA,eAAAC,OAAA,GAAe,EAAf;AAgBmE;;AAxB9C;AAAA;AAAA,qCA2BJ;;;;;;;;;;AAEG,6BAAM,KAAKH,iBAAL,CAAuBI,MAAvB,CAA8B;AAChDC,+BAAO,EAAE;AADuC,uBAA9B,CAAN;;;AAAVC,6B;;AAIN,6BAAMA,OAAO,CAACC,OAAR,EAAN;;;AACA,2BAAKV,OAAL,CAAaW,QAAb,GAAwBC,SAAxB,CAAkC,UAAAC,IAAI,EAAI;AACtC,6BAAI,CAACP,OAAL,GAAeO,IAAI,CAAC,MAAD,CAAnB;AACAJ,+BAAO,CAACK,OAAR;AACAC,+BAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,uBAJD;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BH;AApEoB;;AAAA;AAAA,S;;;;gBAXjB;;gBACA;;gBACiC;;gBACjC;;gBADc;;;;;;gBAWjB,uD;AAAS,iBAAC,QAAD,EAAU;AAAC,sBAAO;AAAR,WAAV;;;AAFDf,kBAAY,6DALxB,gEAAU;AACPmB,gBAAQ,EAAE,cADH;AAEPC,gBAAQ,EAAR;AAAA;AAAA,wGAFO;;;;AAAA,OAAV,CAKwB,GAAZpB,YAAY,CAAZ","file":"pages-location-location-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Choose Location</ion-title>\\n      </ion-toolbar>\\n  <ion-searchbar [(ngModel)]=\\\"searchTerm\\\"  [animated]=\\\"true\\\" placeholder=\\\"Search your location\\\"></ion-searchbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list >\\n    <ion-card>\\n    <ion-item-sliding *ngFor=\\\"let grocery of result2 | filter: searchTerm \\\">\\n      <ion-item  [routerLink]=\\\"['/cities', grocery.locid]\\\">\\n        <ion-label>{{grocery.location}}</ion-label>\\n      </ion-item>\\n      <ion-item-options side=\\\"start\\\">\\n        <ion-item-option>Search </ion-item-option>\\n      </ion-item-options>\\n    </ion-item-sliding>\\n    </ion-card>\\n\\n\\n\\n\\n<!--    <ion-card>\\n      <ion-item>\\n        <ion-header>\\n          {{grocery.locid}}\\n          {{grocery.location}}\\n        </ion-header>\\n      </ion-item>\\n    </ion-card>-->\\n  </ion-list>\\n\\n\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LocationPage } from './location.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LocationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LocationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LocationPageRoutingModule } from './location-routing.module';\n\nimport { LocationPage } from './location.page';\nimport {Ng2SearchPipeModule} from 'ng2-search-filter';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        LocationPageRoutingModule,\n        Ng2SearchPipeModule\n    ],\n  declarations: [LocationPage]\n})\nexport class LocationPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvY2F0aW9uL2xvY2F0aW9uLnBhZ2Uuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {LoginService} from '../../services/login.service';\nimport {IonSearchbar, LoadingController, ToastController} from '@ionic/angular';\nimport {RouterModule} from '@angular/router';\n\n\n@Component({\n    selector: 'app-location',\n    templateUrl: './location.page.html',\n    styleUrls: ['./location.page.scss'],\n})\nexport class LocationPage implements OnInit {\n\n    @ViewChild('search',{static:false}) search : IonSearchbar;\n\n    url = 'https://sgni.in/api/run_new.php?call=locationcity';\n\n    result: any = {};\n\n    result2: any = [];\n\n\n    searchTerm: string ;\n\n    value : string;\n\n    location: string;\n    locid: string;\n\n\n\n     constructor(private http: HttpClient,\n                      private service: LoginService,\n                      public toastController: ToastController,\n                      private router: RouterModule,\n                      private loadingController: LoadingController,) {}\n\n\n    async ngOnInit() {\n\n        const loading = await this.loadingController.create({\n            message: 'Loading ...',\n        });\n\n        await loading.present();\n        this.service.location().subscribe(data => {\n            this.result2 = data['data'];\n            loading.dismiss();\n            console.log(data);\n        });\n\n        /*        return this.http.get(`https://sgni.in/api/run_new.php?call=locationcity`).subscribe(data => {\n\n                    this.genres = data.data;\n\n                });\n\n\n                return new Promise((resolve, reject) => {\n                    this.http.get(`${this.url}`).subscribe((res) => {\n                        console.log('RegisterApi', res);\n                        this.result = res;\n\n                        console.log('ttt', this.result2);\n                        this.result.data.forEach((item) => {\n\n\n                            this.location = item.location;\n                            this.locid = item.locid;\n\n                            console.log('loc-id', item.locid);\n                            console.log('location', item.location);\n                        });\n                    }, err => {\n                        reject(err);\n                    });\n                });*/\n\n\n    }\n\n/*    async toast(event,item) {\n        const toast = await this.toastController.create({\n            color: 'dark',\n            duration: 2000,\n            message: 'Paired successfully',\n        });\n        await toast.present();\n    }*/\n\n\n}\n"]}