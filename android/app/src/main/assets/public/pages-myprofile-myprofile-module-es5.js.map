{"version":3,"sources":["webpack:///src/app/pages/myprofile/myprofile.page.html","webpack:///src/app/pages/myprofile/myprofile-routing.module.ts","webpack:///src/app/pages/myprofile/myprofile.module.ts","webpack:///src/app/pages/myprofile/myprofile.page.scss","webpack:///src/app/pages/myprofile/myprofile.page.ts"],"names":["routes","path","component","MyprofilePageRoutingModule","imports","forChild","exports","MyprofilePageModule","declarations","MyprofilePage","formBuilder","service","loadingController","toastController","router","menu","todo","group","name","required","address","phone","compose","minLength","gender","close","getSid","then","d","console","log","sid","batch","batchtime","serverData","value","updatephone","subscribe","data","loading","navigateByUrl","replaceUrl","create","message","position","duration","toast","present","selector","template"],"mappings":"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","file":"pages-myprofile-myprofile-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>My Profile</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <form [formGroup]=\\\"todo\\\" (ngSubmit)=\\\"logForm()\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Name *</ion-label>\\n      <ion-input type=\\\"tel\\\"  required  formControlName=\\\"name\\\"  (ngModelChange)=\\\"$event.toUpperCase()\\\"></ion-input>\\n      <ion-icon name=\\\"person-outline\\\" slot=\\\"end\\\"></ion-icon>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Address *</ion-label>\\n      <ion-input type=\\\"tel\\\"  formControlName=\\\"address\\\"></ion-input>\\n      <ion-icon name=\\\"pin-outline\\\" slot=\\\"end\\\"></ion-icon>\\n    </ion-item>\\n\\n\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Phone *</ion-label>\\n      <ion-input type=\\\"tel\\\"  maxlength=\\\"10\\\" required  formControlName=\\\"phone\\\"></ion-input>\\n      <ion-icon name=\\\"call-outline\\\" slot=\\\"end\\\"></ion-icon>\\n    </ion-item>\\n\\n    <ion-item  [formGroup]=\\\"todo\\\">\\n      <ion-label>Gender</ion-label>\\n      <ion-select (ionChange)=\\\"batchChange(batch)\\\" [(ngModel)]=\\\"batch\\\" formControlName=\\\"gender\\\" >\\n        <ion-select-option value=\\\"M\\\">Male</ion-select-option>\\n        <ion-select-option value=\\\"F\\\">Female</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n\\n\\n\\n    <ion-button class=\\\"main-button\\\" type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!todo.valid\\\">Update Profile</ion-button>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MyprofilePage } from './myprofile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MyprofilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MyprofilePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MyprofilePageRoutingModule } from './myprofile-routing.module';\n\nimport { MyprofilePage } from './myprofile.page';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        MyprofilePageRoutingModule,\n        ReactiveFormsModule\n    ],\n  declarations: [MyprofilePage]\n})\nexport class MyprofilePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL215cHJvZmlsZS9teXByb2ZpbGUucGFnZS5zY3NzIn0= */\";","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {LoginService} from '../../services/login.service';\nimport {LoadingController, MenuController, ToastController} from '@ionic/angular';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-myprofile',\n    templateUrl: './myprofile.page.html',\n    styleUrls: ['./myprofile.page.scss'],\n})\nexport class MyprofilePage implements OnInit {\n    private todo: FormGroup;\n    batch: any;\n    batchtime: any;\n    data;\n    sid;\n    serverData: any;\n    constructor(private formBuilder: FormBuilder,\n                private service: LoginService,\n                private loadingController: LoadingController,\n                private toastController: ToastController,\n                private router : Router,\n                private menu: MenuController) {\n        this.todo = this.formBuilder.group({\n            name: ['', Validators.required],\n            address: ['', Validators.required],\n            phone: ['', Validators.compose([Validators.required, Validators.minLength(10)])],\n            gender: ['', Validators.required]\n        });\n     /*   this.todo.controls['phone'].disable();*/\n\n\n    }\n\n    ngOnInit() {\n        this.menu.close();\n        this.service.getSid('spid').then(\n            (d) => console.log(\"spid is this now\",this.sid= d)\n        );\n\n\n    /*    this.service.getphone('phone').then(\n            (value) => console.log(\"isLogged\",this.data= value)\n        );*/\n\n\n\n      /*  this.service.getphone('phone');\n        this.service.getSid('sid').then((value) => console.log(\"this is the sid\",this.sid= value));*/\n\n    }\n\n    batchChange(batch) {\n        console.log('Selectedbatch', batch);\n        this.batchtime = batch;\n        console.log(this.batchtime);\n    }\n\n    logForm() {\n        console.log(this.sid);\n        this.serverData = this.todo.value;\n        console.log(this.serverData.phone);\n      /*  this.service.updatephone(this.sid, this.serverData.name,this.serverData.address,this.serverData.phone,this.serverData.gender).subscribe(data => {\n            console.log(data);\n            this.loading();\n\n\n        });*/\n        this.service.updatephone(this.sid,this.serverData.name,this.serverData.address,this.serverData.phone,this.serverData.gender).subscribe(data => {\n            console.log(data);\n            this.loading();\n\n\n        });\n    }\n\n    async loading() {\n        this.router.navigateByUrl('/home', { replaceUrl: true });\n\n        const toast = await this.toastController.create({\n            message: 'Profile Updated Successfully',\n            position: 'bottom',\n            duration: 3000,\n\n\n        });\n        toast.present();\n\n    }\n}\n"]}